# Scope
set previewer ~/.config/lf/scope-lf-wrapper.sh
map i $LESSOPEN='| ~/.config/lf/scope-lf-wrapper.sh %s' less -R $f

# Icons
set icons

# File and directory size
set info size
set dircounts

# Show hidden files
map . set hidden!

# Custom executors
map xj $jless $f
map xo $xdg-open $f
map xd $~/.config/lf/smart-objdump.sh $f
map xD $~/.config/lf/smart-objdump.sh $f --extended

# Automatic refresh
set period 1

# Git status

set info custom

cmd on-load &{{
    cd "$(dirname "$1")" || exit 1
    [ "$(git rev-parse --is-inside-git-dir 2>/dev/null)" = false ] || exit 0

    cmds=""

    for file in "$@"; do
        case "$file" in
            */.git|*/.git/*) continue;;
        esac

        # status=$(git status --porcelain --ignored -- "$file" | cut -c1-2 | head -n1)
        status=$(git status --porcelain -- "$file" | cut -c1-2 | head -n1)

        if [ -n "$status" ]; then
            cmds="${cmds}addcustominfo ${file} \"$status\"; "
        else
            cmds="${cmds}addcustominfo ${file} ''; "
        fi
    done

    lf -remote "send $id :$cmds"
}}

cmd on-cd &{{
    # display git repository status in your prompt
    source /usr/share/git/completion/git-prompt.sh
    GIT_PS1_SHOWDIRTYSTATE=auto
    GIT_PS1_SHOWSTASHSTATE=auto
    GIT_PS1_SHOWUNTRACKEDFILES=auto
    GIT_PS1_SHOWUPSTREAM=auto
    GIT_PS1_COMPRESSSPARSESTATE=auto
    git="$(__git_ps1 " [GIT BRANCH:> %s]")" || true
    fmt="\033[32;1m%u@%h\033[0m:\033[34;1m%w\033[0m\033[33;1m$git\033[0m"
    lf -remote "send $id set promptfmt \"$fmt\""
}}